version: "2"

services:

  maria_backend:
    container_name: maria_backend
    environment:
      - MYSQL_DATABASE=wrp_server_db
      - MYSQL_USER=wrp
      - MYSQL_PASSWORD=wrp
      - MYSQL_ROOT_PASSWORD=wrp
    image: mariadb:10.4.12
    ports:
        - "3307:3306"
    volumes:
        - ./mariadb/data:/var/lib/mysql
        - ./mariadb/dumps/:/var/dumps
        - ./mariadb/my.cnf:/etc/mysql/conf.d/override.cnf
    labels:
          org.label-schema.group: "backend"

  django_backend:
    container_name: django_backend
    build:
      context: ..
      dockerfile: ./docker/python/Dockerfile
    #command: bash -c "./docker/wait-for-it.sh maria_backend:3306 && python ./manage.py runserver 0.0.0.0:8000"
    #command: bash -c "./docker/wait-for-it.sh maria_backend:3306 && gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 200 --log-level=debug wrp_server.wsgi:application"
    command: bash -c "./docker/wait-for-it.sh maria_backend:3306 && gunicorn --bind unix:/usr/src/wrp-server/wrp.sock --workers 3 --timeout 200 --log-level=debug wrp_server.wsgi:application"

    #command: tail -F /var/log/syslog
    volumes:
      - ..:/usr/src/wrp-server
#    ports:
#      - 8000:8000
    links:
      - maria_backend
    depends_on:
      - maria_backend
    env_file:
      - ./.env.dev
    labels:
      org.label-schema.group: "backend"

#  # Nginx can be used as proxy
#  nginx:
#    container_name: nginx
#    build:
#      context: .
#      dockerfile: ./nginx/Dockerfile
#    volumes:
#      - ..:/usr/src/wrp-server
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ./nginx/sites/:/etc/nginx/sites-available
#      - ./nginx/conf.d/:/etc/nginx/conf.d
#      #- ./nginx/logs/:/var/log  ## Please use it when you need logging. Create nginx/error.log and nginx/access.log before start logging.
#    privileged: true
#    command: bash -c "nginx"
#    links:
#      - django_backend
#    depends_on:
#      - django_backend
#    ports:
#      - "8000:80"
#      - "443:443"
#    labels:
#      org.label-schema.group: "backend"

  redis_backend:
    container_name: redis_backend
    image: redis:latest
    labels:
        org.label-schema.group: "backend"
